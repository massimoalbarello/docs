{
  "openapi": "3.1.0",
  "info": {
    "title": "onfabric",
    "description": "Welcome to OnFabric's API documentation! Here you will able to discover all of the ways you can interact with the OnFabric API.",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/api/v1"
    }
  ],
  "paths": {
    "/link": {
      "post": {
        "tags": [
          "Link"
        ],
        "summary": "Generate Token",
        "operationId": "generate_token_link_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkTokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/link/email": {
      "put": {
        "tags": [
          "Link"
        ],
        "summary": "Update Link User Email",
        "operationId": "update_link_user_email_link_email_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/link/details": {
      "get": {
        "tags": [
          "Link"
        ],
        "summary": "Get Link User Details",
        "operationId": "get_link_user_details_link_details_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/link/connection/{connection_id}": {
      "delete": {
        "tags": [
          "Link"
        ],
        "summary": "Revoke Consent",
        "operationId": "revoke_consent_link_connection__connection_id__delete",
        "parameters": [
          {
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Connection Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/context/{user_id}/catalog/{catalog_id}": {
      "get": {
        "tags": [
          "User Context"
        ],
        "summary": "Catalog Search",
        "operationId": "catalog_search_context__user_id__catalog__catalog_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the user",
              "title": "User Id"
            },
            "description": "The id of the user"
          },
          {
            "name": "catalog_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid4",
              "description": "The id of the catalog",
              "title": "Catalog Id"
            },
            "description": "The id of the catalog"
          },
          {
            "name": "context",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Context to hone the catalog intersection",
              "title": "Context"
            },
            "description": "Context to hone the catalog intersection"
          },
          {
            "name": "top_k",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of catalog items to return",
              "title": "Top K"
            },
            "description": "The number of catalog items to return"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Start date to filter events from",
              "title": "From Date"
            },
            "description": "Start date to filter events from"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "End date to filter events to",
              "title": "To Date"
            },
            "description": "End date to filter events to"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CatalogSearchResult"
                  },
                  "title": "Response Catalog Search Context  User Id  Catalog  Catalog Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/context/{user_id}/ask": {
      "get": {
        "tags": [
          "User Context"
        ],
        "summary": "Ask User",
        "operationId": "ask_user_context__user_id__ask_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the user",
              "title": "User Id"
            },
            "description": "The id of the user"
          },
          {
            "name": "question",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The question you have for the user",
              "title": "Question"
            },
            "description": "The question you have for the user"
          },
          {
            "name": "language_model",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageModel",
              "description": "A language model to use for NLG",
              "default": "gpt-4o-mini"
            },
            "description": "A language model to use for NLG"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Start date to filter events from",
              "title": "From Date"
            },
            "description": "Start date to filter events from"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "End date to filter events to",
              "title": "To Date"
            },
            "description": "End date to filter events to"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/journey/{user_id}": {
      "get": {
        "tags": [
          "Journeys"
        ],
        "summary": "Query Journeys",
        "operationId": "query_journeys_journey__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Number of results to return",
              "title": "Top K"
            },
            "description": "Number of results to return"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search string to filter events",
              "title": "Query"
            },
            "description": "Search string to filter events"
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Start date to filter events from",
              "title": "From Date"
            },
            "description": "Start date to filter events from"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "End date to filter events to",
              "title": "To Date"
            },
            "description": "End date to filter events to"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JourneyRead"
                  },
                  "title": "Response Query Journeys Journey  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/journey/{user_id}/overtime": {
      "get": {
        "tags": [
          "Journeys"
        ],
        "summary": "Get Journeys Overtime",
        "operationId": "get_journeys_overtime_journey__user_id__overtime_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "Start date to filter events from",
              "title": "From Date"
            },
            "description": "Start date to filter events from"
          },
          {
            "name": "to_date",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time",
              "description": "End date to filter events to",
              "title": "To Date"
            },
            "description": "End date to filter events to"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JourneyOvertime"
                  },
                  "title": "Response Get Journeys Overtime Journey  User Id  Overtime Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/journey/{user_id}/traits": {
      "get": {
        "tags": [
          "Journeys"
        ],
        "summary": "Get Journeys Traits",
        "operationId": "get_journeys_traits_journey__user_id__traits_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The api key generated from the Fabric developer portal",
              "title": "Api-Key"
            },
            "description": "The api key generated from the Fabric developer portal"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatedTraits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Affluence": {
        "type": "string",
        "enum": [
          "LOW",
          "MIDDLE",
          "UPPER"
        ],
        "title": "Affluence"
      },
      "AffluenceTrait": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Affluence"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence"
          }
        },
        "type": "object",
        "required": [
          "value",
          "confidence"
        ],
        "title": "AffluenceTrait"
      },
      "Age": {
        "type": "string",
        "enum": [
          "0-18+",
          "18-25+",
          "25-35+",
          "35-45+",
          "45-55+",
          "55+"
        ],
        "title": "Age"
      },
      "AgeTrait": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Age"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence"
          }
        },
        "type": "object",
        "required": [
          "value",
          "confidence"
        ],
        "title": "AgeTrait"
      },
      "AggregatedTrait": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "score": {
            "type": "number",
            "title": "Score"
          },
          "support": {
            "type": "integer",
            "title": "Support"
          }
        },
        "type": "object",
        "required": [
          "category",
          "score",
          "support"
        ],
        "title": "AggregatedTrait"
      },
      "AggregatedTraits": {
        "properties": {
          "sex": {
            "items": {
              "$ref": "#/components/schemas/AggregatedTrait"
            },
            "type": "array",
            "title": "Sex"
          },
          "country": {
            "items": {
              "$ref": "#/components/schemas/AggregatedTrait"
            },
            "type": "array",
            "title": "Country"
          },
          "age": {
            "items": {
              "$ref": "#/components/schemas/AggregatedTrait"
            },
            "type": "array",
            "title": "Age"
          },
          "political_affiliation": {
            "items": {
              "$ref": "#/components/schemas/AggregatedTrait"
            },
            "type": "array",
            "title": "Political Affiliation"
          },
          "affluence": {
            "items": {
              "$ref": "#/components/schemas/AggregatedTrait"
            },
            "type": "array",
            "title": "Affluence"
          }
        },
        "type": "object",
        "required": [
          "sex",
          "country",
          "age",
          "political_affiliation",
          "affluence"
        ],
        "title": "AggregatedTraits"
      },
      "AskResponse": {
        "properties": {
          "answer": {
            "type": "string",
            "title": "Answer"
          },
          "context": {
            "items": {
              "$ref": "#/components/schemas/JourneyReadWithScore"
            },
            "type": "array",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "answer",
          "context"
        ],
        "title": "AskResponse"
      },
      "CatalogItemRead": {
        "properties": {
          "item_id": {
            "type": "string",
            "format": "uuid4",
            "title": "Item Id"
          },
          "item_data": {
            "title": "Item Data"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "item_data"
        ],
        "title": "CatalogItemRead"
      },
      "CatalogSearchResult": {
        "properties": {
          "item": {
            "$ref": "#/components/schemas/CatalogItemRead"
          },
          "evidence": {
            "$ref": "#/components/schemas/JourneyRead"
          },
          "score": {
            "type": "number",
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "item",
          "evidence",
          "score"
        ],
        "title": "CatalogSearchResult"
      },
      "Confidence": {
        "type": "string",
        "enum": [
          "NONE",
          "LOW",
          "MEDIUM",
          "HIGH"
        ],
        "title": "Confidence"
      },
      "Country": {
        "type": "string",
        "enum": [
          "ABW",
          "AFG",
          "AGO",
          "AIA",
          "ALA",
          "ALB",
          "AND",
          "ARE",
          "ARG",
          "ARM",
          "ASM",
          "ATA",
          "ATF",
          "ATG",
          "AUS",
          "AUT",
          "AZE",
          "BDI",
          "BEL",
          "BEN",
          "BES",
          "BFA",
          "BGD",
          "BGR",
          "BHR",
          "BHS",
          "BIH",
          "BLM",
          "BLR",
          "BLZ",
          "BMU",
          "BOL",
          "BRA",
          "BRB",
          "BRN",
          "BTN",
          "BVT",
          "BWA",
          "CAF",
          "CAN",
          "CCK",
          "CHE",
          "CHL",
          "CHN",
          "CIV",
          "CMR",
          "COD",
          "COG",
          "COK",
          "COL",
          "COM",
          "CPV",
          "CRI",
          "CUB",
          "CUW",
          "CXR",
          "CYM",
          "CYP",
          "CZE",
          "DEU",
          "DJI",
          "DMA",
          "DNK",
          "DOM",
          "DZA",
          "ECU",
          "EGY",
          "ERI",
          "ESH",
          "ESP",
          "EST",
          "ETH",
          "FIN",
          "FJI",
          "FLK",
          "FRA",
          "FRO",
          "FSM",
          "GAB",
          "GBR",
          "GEO",
          "GGY",
          "GHA",
          "GIB",
          "GIN",
          "GLP",
          "GMB",
          "GNB",
          "GNQ",
          "GRC",
          "GRD",
          "GRL",
          "GTM",
          "GUF",
          "GUM",
          "GUY",
          "HKG",
          "HMD",
          "HND",
          "HRV",
          "HTI",
          "HUN",
          "IDN",
          "IMN",
          "IND",
          "IOT",
          "IRL",
          "IRN",
          "IRQ",
          "ISL",
          "ISR",
          "ITA",
          "JAM",
          "JEY",
          "JOR",
          "JPN",
          "KAZ",
          "KEN",
          "KGZ",
          "KHM",
          "KIR",
          "KNA",
          "KOR",
          "KWT",
          "LAO",
          "LBN",
          "LBR",
          "LBY",
          "LCA",
          "LIE",
          "LKA",
          "LSO",
          "LTU",
          "LUX",
          "LVA",
          "MAC",
          "MAF",
          "MAR",
          "MCO",
          "MDA",
          "MDG",
          "MDV",
          "MEX",
          "MHL",
          "MKD",
          "MLI",
          "MLT",
          "MMR",
          "MNE",
          "MNG",
          "MNP",
          "MOZ",
          "MRT",
          "MSR",
          "MTQ",
          "MUS",
          "MWI",
          "MYS",
          "MYT",
          "NAM",
          "NCL",
          "NER",
          "NFK",
          "NGA",
          "NIC",
          "NIU",
          "NLD",
          "NOR",
          "NPL",
          "NRU",
          "NZL",
          "OMN",
          "PAK",
          "PAN",
          "PCN",
          "PER",
          "PHL",
          "PLW",
          "PNG",
          "POL",
          "PRI",
          "PRK",
          "PRT",
          "PRY",
          "PSE",
          "PYF",
          "QAT",
          "REU",
          "ROU",
          "RUS",
          "RWA",
          "SAU",
          "SDN",
          "SEN",
          "SGP",
          "SGS",
          "SHN",
          "SJM",
          "SLB",
          "SLE",
          "SLV",
          "SMR",
          "SOM",
          "SPM",
          "SRB",
          "SSD",
          "STP",
          "SUR",
          "SVK",
          "SVN",
          "SWE",
          "SWZ",
          "SXM",
          "SYC",
          "SYR",
          "TCA",
          "TCD",
          "TGO",
          "THA",
          "TJK",
          "TKL",
          "TKM",
          "TLS",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TUV",
          "TWN",
          "TZA",
          "UGA",
          "UKR",
          "UMI",
          "URY",
          "USA",
          "UZB",
          "VAT",
          "VCT",
          "VEN",
          "VGB",
          "VIR",
          "VNM",
          "VUT",
          "WLF",
          "WSM",
          "YEM",
          "ZAF",
          "ZMB",
          "ZWE"
        ],
        "title": "Country"
      },
      "CountryTrait": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Country"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence"
          }
        },
        "type": "object",
        "required": [
          "value",
          "confidence"
        ],
        "title": "CountryTrait"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JourneyOvertime": {
        "properties": {
          "month": {
            "type": "string",
            "format": "date-time",
            "title": "Month"
          },
          "journey_count": {
            "type": "integer",
            "title": "Journey Count"
          }
        },
        "type": "object",
        "required": [
          "month",
          "journey_count"
        ],
        "title": "JourneyOvertime"
      },
      "JourneyRead": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Topics"
          },
          "entities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entities"
          },
          "traits": {
            "$ref": "#/components/schemas/Traits"
          },
          "cohesion": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cohesion"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "id",
          "text",
          "topics",
          "entities",
          "traits",
          "cohesion",
          "count",
          "start_time",
          "end_time"
        ],
        "title": "JourneyRead"
      },
      "JourneyReadWithScore": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Topics"
          },
          "entities": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entities"
          },
          "traits": {
            "$ref": "#/components/schemas/Traits"
          },
          "cohesion": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cohesion"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "score": {
            "type": "number",
            "title": "Score"
          }
        },
        "type": "object",
        "required": [
          "id",
          "text",
          "topics",
          "entities",
          "traits",
          "cohesion",
          "count",
          "start_time",
          "end_time",
          "score"
        ],
        "title": "JourneyReadWithScore"
      },
      "LanguageModel": {
        "type": "string",
        "enum": [
          "o1-preview",
          "o1-mini",
          "gpt-4o",
          "gpt-4o-mini"
        ],
        "title": "LanguageModel"
      },
      "LinkStatus": {
        "type": "string",
        "enum": [
          "created",
          "verified",
          "complete",
          "stale",
          "failed"
        ],
        "title": "LinkStatus"
      },
      "LinkTokenResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid4",
            "title": "Id"
          },
          "token": {
            "type": "string",
            "title": "Token"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "title": "Expires"
          },
          "connection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid4"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connection Id"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LinkStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "revoked": {
            "type": "boolean",
            "title": "Revoked",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "token",
          "expires"
        ],
        "title": "LinkTokenResponse"
      },
      "PoliticalAffiliation": {
        "type": "string",
        "enum": [
          "LEFT",
          "RIGHT"
        ],
        "title": "PoliticalAffiliation"
      },
      "PoliticalAffiliationTrait": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PoliticalAffiliation"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence"
          }
        },
        "type": "object",
        "required": [
          "value",
          "confidence"
        ],
        "title": "PoliticalAffiliationTrait"
      },
      "Sex": {
        "type": "string",
        "enum": [
          "MALE",
          "FEMALE",
          "OTHER"
        ],
        "title": "Sex"
      },
      "SexTrait": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Sex"
              },
              {
                "type": "null"
              }
            ]
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence"
          }
        },
        "type": "object",
        "required": [
          "value",
          "confidence"
        ],
        "title": "SexTrait"
      },
      "Traits": {
        "properties": {
          "sex": {
            "$ref": "#/components/schemas/SexTrait"
          },
          "country": {
            "$ref": "#/components/schemas/CountryTrait"
          },
          "affluence": {
            "$ref": "#/components/schemas/AffluenceTrait"
          },
          "political_affiliation": {
            "$ref": "#/components/schemas/PoliticalAffiliationTrait"
          },
          "age": {
            "$ref": "#/components/schemas/AgeTrait"
          }
        },
        "type": "object",
        "required": [
          "sex",
          "country",
          "affluence",
          "political_affiliation",
          "age"
        ],
        "title": "Traits"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
